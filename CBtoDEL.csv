 ,入力,出力,宣言
集合,/(.*)\.Contains/｜(*),( %s2% in %x1% ), 
置換,private:,private, 
置換,protected:,protected, 
置換,public:,public, 
置換,int,Smallint, 
置換,long,longint, 
置換,unsigned int,WORD, 
置換,unsigned long,DWORD, 
置換,unsigned char,Byte, 
置換,char,Shortint, 
置換,char,AnsiChar, 
置換,char[10],array [0..9] of Char, 
置換,sizeof,SizeOf(wk), 
置換,this,Self, 
置換,NULL,nil, 
置換,/0x([0-9a-fA-F]+)/,$\1, 
,extern,{extern},
,PACKAGE,{PACKAGE},
 , , , 
if,if｜(*)｜{*}｜else｜{*},if %s2% then begin｜%s3%end else begin ｜%s5%end;, 
if,if｜(*)｜{*}｜else,if %s2% then begin｜%s3%end else, 
if,if｜(*)｜{*},if %s2% then begin｜%s3%end;, 
if,if｜(*)｜*;｜else,if %s2% then｜%i+%%s3%｜else , 
if,if｜(*)｜*;,if %s2% then｜%3%, 
 , , , 
#define,#define｜文｜(*)｜右,function %s2% (%s3%:variant):variant; begin exit(%c4%);end;, 
#define,#define｜文｜右,%s2% = %c3%, 
#define,#define｜文,&{define %s2%} , 
 , , , 
 , , , 
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 < (.*) ; \1 \+\+/,for %x1% := %x2% to %x3%-1 do, 
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 <= (.*) ; \1 \+\+/,for %x1% := %x2% to %x3%-1 do, 
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 > (.*) ; \1 \-\-/,for %x1% := %x2% downto %x3% do, 
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 >= (.*) ; \1 \-\-/,for %x1% := %x2% downto %x3% do, 
for,for｜(*)｜{*},{for} %2;1%;｜while %2;2% do begin｜→%2;3%;｜%s3%end;, 
for,for｜(*)｜*;,{for} %2;1%;｜while %2;2% do begin｜→%2;3%;｜%3%end;, 
 , , , 
do,do｜{*}｜while｜(*),repeat｜%s2%until not ( %s4% ) , 
do,do｜*;｜while｜(*),repeat｜→%2%｜until not ( %s4% ) , 
while,while｜(*)｜{*},while %s2% do%3%, 
while,while｜(*)｜*;,while %s2% do｜⇒→%3%, 
 , , , 
enum,enum｜文｜{*},%s2% = ( ｜ %o3% ), 
union,union｜文｜{*},case %s2%:Integer of ｜ %s3% ｜ end;, 
union,union｜{*},case Integer of｜%s2%end, 
struct,struct｜文｜{*},record %s2%｜%s3%end, 
struct,struct｜{*},record｜%s2%end, 
class,class｜文｜{*},%s2% = class ｜ %s3% ｜ end;, 
class,class｜文｜文｜{*},%2% %3% = class ｜ %s4% end;, 
class,class｜文｜文｜:｜public｜文｜{*},%2% %3% = class (%s6%) ｜%7%;, 
delete,delete｜文,%2% . free, 
return,return｜右,exit( %c2% );, 
return,return,exit, 
 , , , 
LABEL,LABEL*｜:,%1%:,label %1%;
 , , , 
関数,void｜__fastcall｜文｜::｜文｜(*),procedure %3%.%5% %6%;,procedure %5% %6%;
関数,文｜&｜文｜::｜文｜(*),function %3%.%5% %6% : %1%;,function %5% %6% : %1%;
関数,文｜*｜文｜::｜文｜(*),function %3%.%5% %6% : %1%;,function %5% %6% : %1%;
関数,文｜文｜::｜文｜(*),function %2%.%4% %5% : %1%;,function %4% %5% : %1%;
関数,文｜::｜文｜(*),function %1%.%3% %4% : %1%;,function %3% %4% : %1%;
 , , , 
関数,文｜文｜(*)｜:｜文,constructor %2% %3% : %1%; %c5%, 
関数,文｜(*)｜:｜文,constructor %1%; %c4% , 
 , , , 
関数,文｜&｜文｜(*),function %3% %4% : %1%;｜, 
関数,文｜*｜文｜(*),function %3% %4% : %1%;｜, 
関数,文｜文｜(*),function %2% %3% : %1%;｜, 
関数,文｜(*),%1% %2%, 
 , , , 
代入,左｜+=｜右,%1% := %1% + %3%, 
代入,左｜-=｜右,%1% := %1% - %3%, 
代入,左｜/=｜右,%1% := %1% / %3%, 
代入,左｜*=｜右,%1% := %1% * %3%, 
代入,左｜&=｜右,%1% := %1% & %3%, 
代入,左｜|=｜右,%1% := %1% | %3%, 
代入,左｜^=｜右,%1% := %1% | %3%, 
代入,左｜<<=｜右,%1% := %1% shl %3%, 
代入,左｜>>=｜右,%1% := %1% shr %3%, 
代入,左｜++,%1% := %1% + 1, 
代入,左｜--,%1% := %1% - 1, 
 , , , 
宣言代入,文｜右｜=｜＊,{%1%}%2% := %c4%;,var %2% : %1%;
宣言代入,const｜文｜右｜=｜＊,{%2%}%3% := %4%,var %3% : %2%;
宣言代入,const｜文｜*｜右｜=｜＊,{%2%}%4% := %5%,var %4% : %2%;
宣言代入,const｜文｜&｜右｜=｜＊,{%2%}%4% := %5%,var %4% : %2%;
宣言代入,文｜*｜右｜=｜右,{%1%}%3% := %5%,var %3% : %1%;
宣言代入,文｜&｜右｜=｜右,{%1%}%3% := %5%,var %3% : %1%;
宣言,文｜右｜;,%2% : %1% %3%,var %2% : %1%;
宣言,文｜*｜右｜;,%3% : %1% %3%,var %3% : %1%;
宣言,文｜*｜右,%3% : %1% %3%, 
宣言,文｜&｜右｜;,%3% : %1% %3%,var %3% : %1%;
宣言,const｜文｜右｜;,%3% : %2% %3%,const %3% : %2%;
宣言,const｜文｜*｜右｜;,%4% : %2% %3%,const %4% : %2%;
宣言,const｜文｜&｜右｜;,%4% : %2% %3%,const %4% : %2%;
 , , , 
演算,右｜<<｜右,%1% shl %3%, 
演算,右｜>>｜右,%1% shr %3%, 
演算,右｜<<｜右,%1% -[ %3% ], 
演算,右｜>>｜右,%1% -[ %3% ], 
 , , , 
キャスト,(*)｜文,( %s1% ) %2%, 
 , , , 
