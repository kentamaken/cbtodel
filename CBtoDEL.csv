 ,入力,出力,宣言
宣言配列,文｜/\[(.+?)\]/,"%2[1% : array[%e2,0..%]  of %1%", 
宣言,文｜*｜文｜;,%3% : %1%%4%,var %3% : %1%;
宣言,文｜&｜式｜;,%3% : %1%%4%,var %3% : %1%;
置換,private:,private,
置換,protected:,protected,
置換,public:,public,
置換,int,integer,
置換,long,longint,
置換,unsigned int,WORD,
置換,unsigned long,DWORD,
置換,unsigned char,Byte,
置換,this,Self,
置換,NULL,nil,
置換,/0x([0-9a-fA-F]+)/,$\1,
置換,extern,{extern},
置換,__published:,,
置換,__fastcall,,
置換,PACKAGE,{PACKAGE},
 , , ,
if,if｜(*)｜{*}｜else｜{*},if %s2% then begin｜%s3%end else begin ｜%s5%end;,
if,if｜(*)｜{*}｜else,if %s2% then begin｜%s3%end else,
if,if｜(*)｜{*},if %s2% then begin｜%s3%end;,
if,if｜(*)｜*;｜else,if %s2% then｜%i+%%s3%｜else ,
if,if｜(*)｜*;,if %s2% then｜%3%,
 , , ,
#define,#define｜文｜(*)｜式,function %s2% (%s3%:variant):variant; begin exit(%c4%);end;,
#define,#define｜文｜式,%s2% = %c3%,
#define,#define｜文,&{define %s2%} ,
 , , ,
 , , ,
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 < (.*) ; \1 \+\+/,for %x1% := %x2% to %x3%-1 do,
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 <= (.*) ; \1 \+\+/,for %x1% := %x2% to %x3%-1 do,
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 > (.*) ; \1 \-\-/,for %x1% := %x2% downto %x3% do,
for,for｜/.*([a-z]+[0-9]*) = (.*) ; \1 >= (.*) ; \1 \-\-/,for %x1% := %x2% downto %x3% do,
for,for｜(*)｜{*},{for} %2;1%;｜while %2;2% do begin｜→%2;3%;｜%s3%end;,
for,for｜(*)｜*;,{for} %2;1%;｜while %2;2% do begin｜→%2;3%;｜%3%end;,
 , , ,
do,do｜{*}｜while｜(*),repeat｜%s2%until not ( %s4% ) ,
do,do｜*;｜while｜(*),repeat｜→%2%｜until not ( %s4% ) ,
while,while｜(*)｜{*},while %s2% do%3%,
while,while｜(*)｜*;,while %s2% do｜⇒→%3%,
 , , ,
enum,enum｜文｜{*},%s2% = ( ｜ %o3% ),
union,union｜文｜{*},case %s2%:Integer of ｜ %s3% ｜ end;,
union,union｜{*},case Integer of｜%s2%end,
struct,struct｜文｜{*},record %s2%｜%s3%end,
struct,struct｜{*},record｜%s2%end,
class,class｜文｜文｜:｜/public (.+)/｜{*},%2% %3% = class (%x1%)｜%s6%｜end,
class,class｜文｜文｜{*},%2% %3% = class ｜ %s4% end;,
class,class｜文｜{*},%s2% = class｜%s3%｜end;,
delete,delete｜文,%2% . free,
return,return｜式,exit( %c2% );,
return,return,exit,
 , , ,
LABEL,LABEL*｜:,%1%:,label %1%;
集合,/(.*)\.Contains/｜(*),( %s2% in %x1% ),
 ,,,
関数,void｜__fastcall｜文｜::｜文｜(*),procedure %3%.%5% %6%;,procedure %5% %6%;
関数,void｜文｜(*),procedure %2% %3%,
関数,文｜&｜文｜::｜文｜(*),function %3%.%5% %6% : %1%;,function %5% %6% : %1%;
関数,文｜*｜文｜::｜文｜(*),function %3%.%5% %6% : %1%;,function %5% %6% : %1%;
関数,文｜文｜::｜文｜(*),function %2%.%4% %5% : %1%;,function %4% %5% : %1%;
関数,文｜::｜文｜(*),function %1%.%3% %4% : %1%;,function %3% %4% : %1%;
関数,文｜文｜(*),function %2% %3% : %1%,
 , , , 
関数,文｜(*)｜:｜/(.+?)\((.+?)\)/｜{*},%1%.Create%2%;｜begin｜→%r4 \1=\2%;｜%s5%｜end;,constructor.Create%2%;
関数,ブロック名｜(*)｜:｜/(.*)\((.*)\)/｜{*},constructor %1% begin %r4%, 
関数,ブロック名｜(*),constructor %1% , 
 , , , 
関数,文｜&｜文｜(*),function %3% %4% : %1%;｜, 
関数,文｜*｜文｜(*),function %3% %4% : %1%;｜, 
関数,文｜(*),%1% %2%, 
 , , , 
代入,左｜+=｜式,%1% := %1% + %3%, 
代入,左｜-=｜式,%1% := %1% - %3%, 
代入,左｜/=｜式,%1% := %1% / %3%, 
代入,左｜*=｜式,%1% := %1% * %3%, 
代入,左｜&=｜式,%1% := %1% & %3%, 
代入,左｜|=｜式,%1% := %1% | %3%, 
代入,左｜^=｜式,%1% := %1% | %3%, 
代入,左｜<<=｜式,%1% := %1% shl %3%, 
代入,左｜>>=｜式,%1% := %1% shr %3%, 
代入,左｜++,%1% := %1% + 1, 
代入,左｜--,%1% := %1% - 1, 
 , , , 
宣言｜(),文｜文｜=｜式,%2% : %1% = %4%, 
宣言｜(),文｜文,%2% : %1%, 
宣言代入,文｜文｜=｜＊,{%1%}%2% := %c4;%,var %2% : %1%;
宣言代入,const｜文｜文｜=｜＊,{%2%}%3% := %4%,var %3% : %2%;
宣言代入,const｜文｜*｜文｜=｜＊,{%2%}%4% := %5%,var %4% : %2%;
宣言代入,const｜文｜&｜文｜=｜＊,{%2%}%4% := %5%,var %4% : %2%;
宣言代入,文｜*｜文｜=｜式,{%1%}%3% := %5%,var %3% : %1%;
宣言代入,文｜&｜文｜=｜式,{%1%}%3% := %5%,var %3% : %1%;
宣言,const｜文｜&｜文,%4% : %2%,const %4% : %2%;
宣言,const｜文｜*｜文,%4% : %2%,const %4% : %2%;
宣言,const｜文｜文,%3% : %2%,const %3% : %2%;
宣言,文｜*｜文,%3% : %1%, 
宣言,文｜文,%2% : %1%,var %2% : %1%;
 , , , 
演算,式｜<<｜式,%1% shl %3%, 
演算,式｜>>｜式,%1% shr %3%, 
演算,式｜<<｜式,%1% -[ %3% ], 
演算,式｜>>｜式,%1% -[ %3% ], 
 , , , 
キャスト,(*)｜文,( %s1% ) %2%, 
 , , , 
